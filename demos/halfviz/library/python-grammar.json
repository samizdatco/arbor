{
  "src": ";\n; Grammar of the Python language\n; transcribed from nick siegler's diagram:\n; flickr.com/photos/nicksieger/281055485\n;\n\nfile input -> stmt\nstmt -> compound stmt\nstmt -> simple stmt\nsimple stmt -> small stmt\nsmall stmt -> del\ndel -> exprlist\nsmall stmt -> exec\nsmall stmt -> expr\nexpr -> augassign\nexpr -> testlist\nsmall stmt -> flow\nflow -> return\nflow -> yield\nflow -> continue\nflow -> break\nflow -> raise\nraise -> test\n\nsmall stmt -> pass\nsmall stmt -> print\nsmall stmt -> global\nsmall stmt -> assert\nassert -> test\nsmall stmt -> import\nimport -> import as\nimport -> dotted as\ndotted as -> dotted name\nimport -> dotted name\n\ntest -> lambdef\nlambdef -> test\nlambdef -> varargslist\nvarargslist -> defparameter\ndefparameter -> test\ndefparameter -> fpdef\nfpdef -> fplist\nfplist -> fpdef\n\nexec -> expression\nexpression -> xor\nxor -> and\nand->shift\nshift -> arith\narith -> term\nterm -> factor\nfactor -> power\npower -> factor\npower -> atom\npower -> trailer\ntrailer -> subscriptlist\nsubscriptlist -> subscript\nsubscript -> sliceop\nsliceop -> test\ntrailer -> arglist\narglist -> argument\nargument -> test\narglist -> test\natom -> listmaker\nlistmaker -> list for\nlist for -> exprlist\nlist for -> list iter\nlist iter -> list for\nlist iter -> list if\nlist if -> list iter\nlist if -> test\natom -> dictmaker\ndictmaker -> test\nexec -> test\n\ncompound stmt -> for\nfor -> suite\nfor -> testlist\nfor -> exprlist\ncompound stmt -> classdef\nclassdef -> suite\nclassdef -> testlist\ncompound stmt -> try\ntry -> suite\ntry -> except\ncompound stmt -> if\nif -> suite\nif -> test\ncompound stmt -> while\nwhile -> suite\nwhile -> test\ncompound stmt -> funcdef\nfuncdef -> suite\nfuncdef -> parameters\nparameters -> vararglist",
  "title": "Python Grammar",
  "_rev": "1-b51a39ec5ab3eb1fe22191f07fd08afb",
  "sys": {
    "repulsion": 2600,
    "stiffness": 512,
    "friction": 0.5,
    "gravity": false
  },
  "_id": "python-grammar",
  "example": "doodle"
}
